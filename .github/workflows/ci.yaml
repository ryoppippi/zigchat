on:
  workflow_dispatch:
  push:
  pull_request:
    
jobs:
  test_lint:
    strategy:
      matrix:
        os: 
          - ubuntu-latest
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - name: Install devbox
        uses: jetify-com/devbox-install-action@v0.9.0
      - run: devbox run fmt-check
      - run: devbox run test

  build_assets:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        targets:
          - aarch64-linux
          - x86_64-linux
          - aarch64-windows
          - x86_64-windows
          - aarch64-macos
          - x86_64-macos
        optimize:
          - ReleaseSafe
    steps:
    - uses: actions/checkout@v4
    - name: Install devbox
      uses: jetify-com/devbox-install-action@v0.9.0
    - name: Build
      run: |
        devbox run build --verbose -Dtarget=${{ matrix.targets }} -Doptimize=${{ matrix.optimize }}
    - name: For mac/linux, tar.gz
      if: ${{ !endsWith(matrix.targets, 'windows') }}
      working-directory: ./zig-out/bin/
      run: |
        ls -la .
        tar -czf zigchat-${{ matrix.targets }}.tar.gz *
    - name: For windows, zip
      if: ${{ endsWith(matrix.targets, 'windows') }}
      working-directory: ./zig-out/bin/
      run: |
        ls -la .
        zip -r zigchat-${{ matrix.targets }}.zip *.exe
    - name: Upload to Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.targets }}
        path: |
          zig-out/bin/*.zip
          zig-out/bin/*.tar.gz

  publish_binary_to_release:
    name: Publish Binary to Release
    needs: 
      - test_lint
      - build_assets
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/v')
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ github.ref_name }}
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: true
        generate_release_notes: true
        files: |
          dist-*/*.zip
          dist-*/*.tar.gz

  action-timeline:
    needs: 
      - test_lint
      - build_assets
      - publish_binary_to_release
    permissions:
      actions: read
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - uses: Kesin11/actions-timeline@v1
